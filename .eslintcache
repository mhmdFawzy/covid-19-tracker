[{"F:\\covid19\\covid-19-tracker\\src\\context\\CountryState.js":"1","F:\\covid19\\covid-19-tracker\\src\\components\\Header.js":"2","F:\\covid19\\covid-19-tracker\\src\\components\\InfoBox.js":"3","F:\\covid19\\covid-19-tracker\\src\\containers\\RightSide.js":"4","F:\\covid19\\covid-19-tracker\\src\\utils.js":"5","F:\\covid19\\covid-19-tracker\\src\\containers\\DataBoxes.js":"6","F:\\covid19\\covid-19-tracker\\src\\containers\\LeftSide.js":"7","F:\\covid19\\covid-19-tracker\\src\\components\\Table.js":"8","F:\\covid19\\covid-19-tracker\\src\\components\\Graph.js":"9","F:\\covid19\\covid-19-tracker\\src\\context\\countryReducer.js":"10","F:\\covid19\\covid-19-tracker\\src\\App.js":"11","F:\\covid19\\covid-19-tracker\\src\\components\\Map.js":"12","F:\\covid19\\covid-19-tracker\\src\\context\\countryContext.js":"13","F:\\covid19\\covid-19-tracker\\src\\index.js":"14"},{"size":3730,"mtime":1609351124647,"results":"15","hashOfConfig":"16"},{"size":1634,"mtime":1609350332354,"results":"17","hashOfConfig":"16"},{"size":1403,"mtime":1609350253315,"results":"18","hashOfConfig":"16"},{"size":665,"mtime":1609406963525,"results":"19","hashOfConfig":"16"},{"size":1066,"mtime":1609347316908,"results":"20","hashOfConfig":"16"},{"size":1421,"mtime":1609407026353,"results":"21","hashOfConfig":"16"},{"size":1386,"mtime":1609407130371,"results":"22","hashOfConfig":"16"},{"size":1101,"mtime":1609349656278,"results":"23","hashOfConfig":"16"},{"size":1966,"mtime":1609349686779,"results":"24","hashOfConfig":"16"},{"size":1596,"mtime":1609351116070,"results":"25","hashOfConfig":"16"},{"size":456,"mtime":1609406938695,"results":"26","hashOfConfig":"16"},{"size":2924,"mtime":1609410449125,"results":"27","hashOfConfig":"16"},{"size":112,"mtime":1608904157682,"results":"28","hashOfConfig":"16"},{"size":396,"mtime":1609410585200,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"z6bb83",{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\covid19\\covid-19-tracker\\src\\context\\CountryState.js",["64"],"import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport countryContext from './countryContext';\nimport countryReducer from './countryReducer';\nimport axios from 'axios'; //optional\nconst CountryState = ({ children }) => {\n    const initialState = {\n        countries: [],\n        sortedCountries: [],\n        historical: {},\n        selectedCountry: 'all',\n        cases: 0,\n        casesType: 'cases',\n        recovered: 0,\n        deaths: 0,\n        todayCases: 0,\n        todayDeaths: 0,\n        todayRecovered: 0,\n        selectedLat: 34.8,\n        selectedLong: -40.47,\n        zoom: 2\n    };\n    const [state, dispatch] = useReducer(countryReducer, initialState);\n    const getCountries = () => {\n        axios\n            .all([\n                axios.get('https://disease.sh/v3/covid-19/countries'),\n                axios.get('https://disease.sh/v3/covid-19/countries?sort=cases'),\n                axios.get('https://disease.sh/v3/covid-19/historical/all?lastdays=30')\n            ])\n            .then(\n                axios.spread((countries, sortedCountries, historical) => {\n                    dispatch({\n                        type: 'GET_COUNTRIES',\n                        payload: countries.data\n                    });\n                    dispatch({\n                        type: 'GET_SORTED_COUNTRIES',\n                        payload: sortedCountries.data\n                    });\n                    dispatch({\n                        type: 'GET_HISTORICAL',\n                        payload: historical.data\n                    });\n                })\n            )\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const getCountryData = (country) => {\n        if (country === 'all') {\n            axios\n                .get('https://disease.sh/v3/covid-19/all')\n                .then((res) => {\n                    console.log(res.data);\n                    dispatch({\n                        type: 'GET_COUNTRY_DATA',\n                        payload: res.data\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            axios\n                .get(`https://disease.sh/v3/covid-19/countries/${country}`)\n                .then((res) => {\n                    dispatch({\n                        type: 'GET_COUNTRY_DATA',\n                        payload: res.data\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n    };\n    const setCasesType = (type) => {\n        dispatch({\n            type: 'SET_CASES_TYPE',\n            payload: type\n        });\n    };\n    return (\n        <countryContext.Provider\n            value={{\n                countries: state.countries,\n                selectedCountry: state.selectedCountry,\n                sortedCountries: state.sortedCountries,\n                historical: state.historical,\n                cases: state.cases,\n                casesType: state.casesType,\n                recovered: state.recovered,\n                deaths: state.deaths,\n                todayCases: state.todayCases,\n                todayDeaths: state.todayDeaths,\n                todayRecovered: state.todayRecovered,\n                selectedLat: state.selectedLat,\n                selectedLong: state.selectedLong,\n                zoom: state.zoom,\n                getCountries,\n                getCountryData,\n                setCasesType\n            }}>\n            {children}\n        </countryContext.Provider>\n    );\n};\nCountryState.prototype = {\n    children: PropTypes.element.isRequired\n};\nexport default CountryState;\n",["65"],"F:\\covid19\\covid-19-tracker\\src\\components\\Header.js",["66"],"import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport WindowedSelect, { createFilter } from 'react-windowed-select';\n\nconst options = [{ label: 'Worldwide', value: 'all', name: 'Worldwide' }];\n\nconst Header = ({ data }) => {\n    const { countries, selectedCountry, getCountries, getCountryData } = data;\n    const [selection, setSelectedCountry] = useState(selectedCountry);\n    if (countries.length > 1) {\n        countries.forEach((country) => {\n            options.push({\n                label: country.country,\n                value: country.countryInfo.iso2,\n                name: country.country\n            });\n        });\n    }\n\n    useEffect(() => {\n        getCountryData('all');\n        getCountries();\n    }, []);\n    const handleSelectedCountry = useCallback((e) => {\n        setSelectedCountry(e.value);\n    }, []);\n    useEffect(() => {\n        if (selection !== 'worldwide') {\n            getCountryData(selection);\n        }\n    }, [selection]);\n\n    return (\n        <div className=\"app__header card\">\n            <h1>covid-19 traker</h1>\n            <WindowedSelect\n                options={options}\n                onChange={(e) => {\n                    handleSelectedCountry(e);\n                }}\n                styles={{\n                    option: (base) => ({\n                        ...base,\n                        height: 50,\n                        padding: '10px 12px'\n                    })\n                }}\n            />\n        </div>\n    );\n};\n\nHeader.propTypes = {\n    data: PropTypes.object.isRequired\n};\nexport default React.memo(Header);\n",["67"],"F:\\covid19\\covid-19-tracker\\src\\components\\InfoBox.js",["68"],"import React, { useState, useRef, useLayoutEffect, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { prettyPrintStat } from './../utils';\n\nconst InfoBox = ({ title, cases, total, cardCasesType, casesType, setCasesType, isRed }) => {\n    const [active, setactive] = useState(false);\n\n    const cardRef = useRef(null);\n    useEffect(() => {\n        cardRef.current.onclick = () => {\n            setCasesType(cardCasesType);\n        };\n    }, []);\n    useEffect(() => {\n        setactive(cardCasesType === casesType);\n    }, [casesType]);\n    return (\n        <div\n            className={`card infoBox ${active && 'infoBox--selected'} ${isRed && 'infoBox--red'} ${\n                !isRed && 'infoBox__cases--green'\n            }`}\n            ref={cardRef}>\n            <div>\n                <p className=\"infoBox__title\">{title}</p>\n                <h2 className=\"infoBox__cases\">{prettyPrintStat(cases, '+')}</h2>\n                <p className=\"infoBox__total\">{prettyPrintStat(total)} Total</p>\n            </div>\n        </div>\n    );\n};\nInfoBox.propTypes = {\n    title: PropTypes.string.isRequired,\n    cases: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    cardCasesType: PropTypes.string.isRequired,\n    setCasesType: PropTypes.func.isRequired,\n    casesType: PropTypes.string.isRequired,\n    isRed: PropTypes.bool\n};\nexport default React.memo(InfoBox);\n","F:\\covid19\\covid-19-tracker\\src\\containers\\RightSide.js",[],"F:\\covid19\\covid-19-tracker\\src\\utils.js",[],"F:\\covid19\\covid-19-tracker\\src\\containers\\DataBoxes.js",[],"F:\\covid19\\covid-19-tracker\\src\\containers\\LeftSide.js",[],"F:\\covid19\\covid-19-tracker\\src\\components\\Table.js",[],["69"],"F:\\covid19\\covid-19-tracker\\src\\components\\Graph.js",[],"F:\\covid19\\covid-19-tracker\\src\\context\\countryReducer.js",[],"F:\\covid19\\covid-19-tracker\\src\\App.js",[],"F:\\covid19\\covid-19-tracker\\src\\components\\Map.js",[],"F:\\covid19\\covid-19-tracker\\src\\context\\countryContext.js",[],"F:\\covid19\\covid-19-tracker\\src\\index.js",[],{"ruleId":"70","severity":1,"message":"71","line":6,"column":25,"nodeType":"72","endLine":6,"endColumn":33},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":26,"nodeType":"77","messageId":"78","endLine":3,"endColumn":38},{"ruleId":"73","replacedBy":"79"},{"ruleId":"75","severity":1,"message":"80","line":1,"column":35,"nodeType":"77","messageId":"78","endLine":1,"endColumn":50},{"ruleId":"73","replacedBy":"81"},"react/prop-types","'children' is missing in props validation","Property","jsx-a11y/accessible-emoji",[],"no-unused-vars","'createFilter' is defined but never used.","Identifier","unusedVar",[],"'useLayoutEffect' is defined but never used.",[]]