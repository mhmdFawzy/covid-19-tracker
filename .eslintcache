[{"F:\\covid19\\covid-19-tracker\\src\\index.js":"1","F:\\covid19\\covid-19-tracker\\src\\App.js":"2","F:\\covid19\\covid-19-tracker\\src\\components\\Header.js":"3","F:\\covid19\\covid-19-tracker\\src\\components\\InfoBox.js":"4","F:\\covid19\\covid-19-tracker\\src\\context\\countryReducer.js":"5","F:\\covid19\\covid-19-tracker\\src\\context\\CountryState.js":"6","F:\\covid19\\covid-19-tracker\\src\\context\\countryContext.js":"7","F:\\covid19\\covid-19-tracker\\src\\components\\Map.js":"8","F:\\covid19\\covid-19-tracker\\src\\containers\\LeftSide.js":"9","F:\\covid19\\covid-19-tracker\\src\\containers\\DataBoxes.js":"10","F:\\covid19\\covid-19-tracker\\src\\containers\\RightSide.js":"11"},{"size":231,"mtime":1608908932831,"results":"12","hashOfConfig":"13"},{"size":298,"mtime":1608919627781,"results":"14","hashOfConfig":"13"},{"size":1901,"mtime":1608918902645,"results":"15","hashOfConfig":"13"},{"size":634,"mtime":1608916987925,"results":"16","hashOfConfig":"13"},{"size":727,"mtime":1608918731368,"results":"17","hashOfConfig":"13"},{"size":2546,"mtime":1608919042497,"results":"18","hashOfConfig":"13"},{"size":112,"mtime":1608904157682,"results":"19","hashOfConfig":"13"},{"size":169,"mtime":1608917116319,"results":"20","hashOfConfig":"13"},{"size":472,"mtime":1608919383951,"results":"21","hashOfConfig":"13"},{"size":662,"mtime":1608919358206,"results":"22","hashOfConfig":"13"},{"size":252,"mtime":1608919592652,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"z6bb83",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\covid19\\covid-19-tracker\\src\\index.js",[],"F:\\covid19\\covid-19-tracker\\src\\App.js",[],"F:\\covid19\\covid-19-tracker\\src\\components\\Header.js",[],"F:\\covid19\\covid-19-tracker\\src\\components\\InfoBox.js",["48","49","50","51"],"import React from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\nconst InfoBox = ({ title, cases, total, color }) => {\n    return (\n        <Card className=\"infoBox\">\n            <CardContent>\n                <Typography className=\"infoBox__title\" color={color}>\n                    {title}\n                </Typography>\n                <h2 className=\"infoBox__cases\">{cases}</h2>\n                <Typography className=\"infoBox__total\" color={color}>\n                    {total} total\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default React.memo(InfoBox);\n","F:\\covid19\\covid-19-tracker\\src\\context\\countryReducer.js",[],"F:\\covid19\\covid-19-tracker\\src\\context\\CountryState.js",["52"],"import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport countryContext from './countryContext';\nimport countryReducer from './countryReducer';\nimport axios from 'axios'; //optional\nconst CountryState = ({ children }) => {\n    const initialState = {\n        countries: [],\n        selectedCountry: 'worldwide',\n        cases: 0,\n        recovered: 0,\n        deaths: 0,\n        todayCases: 0,\n        todayDeaths: 0,\n        todayRecovered: 0\n    };\n    const [state, dispatch] = useReducer(countryReducer, initialState);\n    const getCountries = () => {\n        axios\n            .get('https://disease.sh/v3/covid-19/countries')\n            .then((res) => {\n                dispatch({\n                    type: 'GET_COUNTRIES',\n                    payload: res.data\n                });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const getCountryData = (country) => {\n        if (country === 'all') {\n            axios\n                .get('https://disease.sh/v3/covid-19/all')\n                .then((res) => {\n                    console.log(res.data);\n                    dispatch({\n                        type: 'GET_COUNTRY_DATA',\n                        payload: res.data\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            axios\n                .get(`https://disease.sh/v3/covid-19/countries/${country}`)\n                .then((res) => {\n                    console.log(res.data);\n                    dispatch({\n                        type: 'GET_COUNTRY_DATA',\n                        payload: res.data\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n    };\n    return (\n        <countryContext.Provider\n            value={{\n                countries: state.countries,\n                selectedCountry: state.selectedCountry,\n                cases: state.cases,\n                recovered: state.recovered,\n                deaths: state.deaths,\n                todayCases: state.todayCases,\n                todayDeaths: state.todayDeaths,\n                todayRecovered: state.todayRecovered,\n                getCountries,\n                getCountryData\n            }}>\n            {children}\n        </countryContext.Provider>\n    );\n};\nCountryState.prototype = {\n    children: PropTypes.element.isRequired\n};\nexport default CountryState;\n","F:\\covid19\\covid-19-tracker\\src\\context\\countryContext.js",[],"F:\\covid19\\covid-19-tracker\\src\\components\\Map.js",[],"F:\\covid19\\covid-19-tracker\\src\\containers\\LeftSide.js",[],"F:\\covid19\\covid-19-tracker\\src\\containers\\DataBoxes.js",[],"F:\\covid19\\covid-19-tracker\\src\\containers\\RightSide.js",[],{"ruleId":"53","severity":1,"message":"54","line":3,"column":20,"nodeType":"55","endLine":3,"endColumn":25},{"ruleId":"53","severity":1,"message":"56","line":3,"column":27,"nodeType":"55","endLine":3,"endColumn":32},{"ruleId":"53","severity":1,"message":"57","line":3,"column":34,"nodeType":"55","endLine":3,"endColumn":39},{"ruleId":"53","severity":1,"message":"58","line":3,"column":41,"nodeType":"55","endLine":3,"endColumn":46},{"ruleId":"53","severity":1,"message":"59","line":6,"column":25,"nodeType":"55","endLine":6,"endColumn":33},"react/prop-types","'title' is missing in props validation","Property","'cases' is missing in props validation","'total' is missing in props validation","'color' is missing in props validation","'children' is missing in props validation"]