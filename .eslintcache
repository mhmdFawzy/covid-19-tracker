[{"F:\\covid19\\covid-19-tracker\\src\\index.js":"1","F:\\covid19\\covid-19-tracker\\src\\App.js":"2","F:\\covid19\\covid-19-tracker\\src\\components\\Header.js":"3","F:\\covid19\\covid-19-tracker\\src\\components\\InfoBox.js":"4","F:\\covid19\\covid-19-tracker\\src\\context\\countryReducer.js":"5","F:\\covid19\\covid-19-tracker\\src\\context\\CountryState.js":"6","F:\\covid19\\covid-19-tracker\\src\\context\\countryContext.js":"7","F:\\covid19\\covid-19-tracker\\src\\components\\Map.js":"8","F:\\covid19\\covid-19-tracker\\src\\containers\\LeftSide.js":"9","F:\\covid19\\covid-19-tracker\\src\\containers\\DataBoxes.js":"10","F:\\covid19\\covid-19-tracker\\src\\containers\\RightSide.js":"11","F:\\covid19\\covid-19-tracker\\src\\components\\Table.js":"12","F:\\covid19\\covid-19-tracker\\src\\components\\Graph.js":"13","F:\\covid19\\covid-19-tracker\\src\\utils.js":"14"},{"size":230,"mtime":1608993938692,"results":"15","hashOfConfig":"16"},{"size":412,"mtime":1609060346445,"results":"17","hashOfConfig":"16"},{"size":1719,"mtime":1608979938201,"results":"18","hashOfConfig":"16"},{"size":634,"mtime":1608916987925,"results":"19","hashOfConfig":"16"},{"size":1469,"mtime":1609060186456,"results":"20","hashOfConfig":"16"},{"size":3497,"mtime":1609060189757,"results":"21","hashOfConfig":"16"},{"size":112,"mtime":1608904157682,"results":"22","hashOfConfig":"16"},{"size":1107,"mtime":1609061402920,"results":"23","hashOfConfig":"16"},{"size":1022,"mtime":1609060469988,"results":"24","hashOfConfig":"16"},{"size":543,"mtime":1608979973951,"results":"25","hashOfConfig":"16"},{"size":656,"mtime":1608986567295,"results":"26","hashOfConfig":"16"},{"size":955,"mtime":1608984203849,"results":"27","hashOfConfig":"16"},{"size":1763,"mtime":1609002136380,"results":"28","hashOfConfig":"16"},{"size":1764,"mtime":1609060973460,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"z6bb83",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\covid19\\covid-19-tracker\\src\\index.js",[],["63"],"F:\\covid19\\covid-19-tracker\\src\\App.js",[],"F:\\covid19\\covid-19-tracker\\src\\components\\Header.js",[],"F:\\covid19\\covid-19-tracker\\src\\components\\InfoBox.js",["64","65","66","67"],"import React from 'react';\nimport { Card, CardContent, Typography } from '@material-ui/core';\nconst InfoBox = ({ title, cases, total, color }) => {\n    return (\n        <Card className=\"infoBox\">\n            <CardContent>\n                <Typography className=\"infoBox__title\" color={color}>\n                    {title}\n                </Typography>\n                <h2 className=\"infoBox__cases\">{cases}</h2>\n                <Typography className=\"infoBox__total\" color={color}>\n                    {total} total\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default React.memo(InfoBox);\n","F:\\covid19\\covid-19-tracker\\src\\context\\countryReducer.js",[],"F:\\covid19\\covid-19-tracker\\src\\context\\CountryState.js",["68"],"import React, { useReducer } from 'react';\nimport PropTypes from 'prop-types';\nimport countryContext from './countryContext';\nimport countryReducer from './countryReducer';\nimport axios from 'axios'; //optional\nconst CountryState = ({ children }) => {\n    const initialState = {\n        countries: [],\n        sortedCountries: [],\n        historical: {},\n        selectedCountry: 'worldwide',\n        cases: 0,\n        recovered: 0,\n        deaths: 0,\n        todayCases: 0,\n        todayDeaths: 0,\n        todayRecovered: 0,\n        selectedLat: 34.8,\n        selectedLong: -40.47,\n        zoom: 2\n    };\n    const [state, dispatch] = useReducer(countryReducer, initialState);\n    const getCountries = () => {\n        axios\n            .all([\n                axios.get('https://disease.sh/v3/covid-19/countries'),\n                axios.get('https://disease.sh/v3/covid-19/countries?sort=cases'),\n                axios.get('https://disease.sh/v3/covid-19/historical/all?lastdays=30')\n            ])\n            .then(\n                axios.spread((countries, sortedCountries, historical) => {\n                    dispatch({\n                        type: 'GET_COUNTRIES',\n                        payload: countries.data\n                    });\n                    dispatch({\n                        type: 'GET_SORTED_COUNTRIES',\n                        payload: sortedCountries.data\n                    });\n                    dispatch({\n                        type: 'GET_HISTORICAL',\n                        payload: historical.data\n                    });\n                })\n            )\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n    const getCountryData = (country) => {\n        if (country === 'all') {\n            axios\n                .get('https://disease.sh/v3/covid-19/all')\n                .then((res) => {\n                    console.log(res.data);\n                    dispatch({\n                        type: 'GET_COUNTRY_DATA',\n                        payload: res.data\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        } else {\n            axios\n                .get(`https://disease.sh/v3/covid-19/countries/${country}`)\n                .then((res) => {\n                    dispatch({\n                        type: 'GET_COUNTRY_DATA',\n                        payload: res.data\n                    });\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n        }\n    };\n    return (\n        <countryContext.Provider\n            value={{\n                countries: state.countries,\n                selectedCountry: state.selectedCountry,\n                sortedCountries: state.sortedCountries,\n                historical: state.historical,\n                cases: state.cases,\n                recovered: state.recovered,\n                deaths: state.deaths,\n                todayCases: state.todayCases,\n                todayDeaths: state.todayDeaths,\n                todayRecovered: state.todayRecovered,\n                selectedLat: state.selectedLat,\n                selectedLong: state.selectedLong,\n                zoom: state.zoom,\n                getCountries,\n                getCountryData\n            }}>\n            {children}\n        </countryContext.Provider>\n    );\n};\nCountryState.prototype = {\n    children: PropTypes.element.isRequired\n};\nexport default CountryState;\n","F:\\covid19\\covid-19-tracker\\src\\context\\countryContext.js",[],"F:\\covid19\\covid-19-tracker\\src\\components\\Map.js",["69"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MapContainer, TileLayer, Marker, useMap } from 'react-leaflet';\nimport { showDataOnMap } from '../utils';\nconst Map = ({ data }) => {\n    const { selectedLat, selectedLong, zoom, countries } = data;\n    const ChangeView = ({ center, zoom }) => {\n        const map = useMap();\n        map.setView(center, zoom);\n        return null;\n    };\n    return (\n        <div className=\"map\">\n            <MapContainer center={[selectedLat, selectedLong]} zoom={zoom}>\n                <ChangeView center={[selectedLat, selectedLong]} zoom={zoom} />\n\n                <TileLayer\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                />\n                {/* <Marker position={[selectedLat, selectedLong]}></Marker> */}\n                {showDataOnMap(countries, 'cases')}\n            </MapContainer>\n        </div>\n    );\n};\nMap.propTypes = {\n    data: PropTypes.object.isRequired\n};\n\nexport default Map;\n","F:\\covid19\\covid-19-tracker\\src\\containers\\LeftSide.js",[],"F:\\covid19\\covid-19-tracker\\src\\containers\\DataBoxes.js",["70","71","72","73","74","75","76"],"import React from 'react';\nimport InfoBox from '../components/InfoBox';\n\nconst DataBoxes = ({ data }) => {\n    const { cases, recovered, deaths, todayCases, todayDeaths, todayRecovered } = data;\n    return (\n        <div className=\"app__state\">\n            <InfoBox title=\"Coronavirus\" cases={todayCases} total={cases} />\n            <InfoBox title=\"Recovered\" cases={todayRecovered} total={recovered} />\n            <InfoBox title=\"Deaths\" cases={todayDeaths} total={deaths} />\n        </div>\n    );\n};\n\nexport default React.memo(DataBoxes);\n","F:\\covid19\\covid-19-tracker\\src\\containers\\RightSide.js",[],"F:\\covid19\\covid-19-tracker\\src\\components\\Table.js",[],"F:\\covid19\\covid-19-tracker\\src\\components\\Graph.js",[],"F:\\covid19\\covid-19-tracker\\src\\utils.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":3,"column":20,"nodeType":"81","endLine":3,"endColumn":25},{"ruleId":"79","severity":1,"message":"82","line":3,"column":27,"nodeType":"81","endLine":3,"endColumn":32},{"ruleId":"79","severity":1,"message":"83","line":3,"column":34,"nodeType":"81","endLine":3,"endColumn":39},{"ruleId":"79","severity":1,"message":"84","line":3,"column":41,"nodeType":"81","endLine":3,"endColumn":46},{"ruleId":"79","severity":1,"message":"85","line":6,"column":25,"nodeType":"81","endLine":6,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":3,"column":35,"nodeType":"88","messageId":"89","endLine":3,"endColumn":41},{"ruleId":"79","severity":1,"message":"90","line":4,"column":22,"nodeType":"81","endLine":4,"endColumn":26},{"ruleId":"79","severity":1,"message":"91","line":5,"column":13,"nodeType":"81","endLine":5,"endColumn":18},{"ruleId":"79","severity":1,"message":"92","line":5,"column":20,"nodeType":"81","endLine":5,"endColumn":29},{"ruleId":"79","severity":1,"message":"93","line":5,"column":31,"nodeType":"81","endLine":5,"endColumn":37},{"ruleId":"79","severity":1,"message":"94","line":5,"column":39,"nodeType":"81","endLine":5,"endColumn":49},{"ruleId":"79","severity":1,"message":"95","line":5,"column":51,"nodeType":"81","endLine":5,"endColumn":62},{"ruleId":"79","severity":1,"message":"96","line":5,"column":64,"nodeType":"81","endLine":5,"endColumn":78},"jsx-a11y/accessible-emoji",[],"react/prop-types","'title' is missing in props validation","Property","'cases' is missing in props validation","'total' is missing in props validation","'color' is missing in props validation","'children' is missing in props validation","no-unused-vars","'Marker' is defined but never used.","Identifier","unusedVar","'data' is missing in props validation","'data.cases' is missing in props validation","'data.recovered' is missing in props validation","'data.deaths' is missing in props validation","'data.todayCases' is missing in props validation","'data.todayDeaths' is missing in props validation","'data.todayRecovered' is missing in props validation"]